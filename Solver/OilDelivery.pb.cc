// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OilDelivery.proto

#include "OilDelivery.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_OilDelivery_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OilDelivery_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery_Cabin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OilDelivery_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery_GasStation_DemandValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OilDelivery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_GasStation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OilDelivery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_Output_Delivery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OilDelivery_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_Vehicle;
}  // namespace protobuf_OilDelivery_2eproto
namespace pb {
class OilDelivery_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Input>
      _instance;
} _OilDelivery_Input_default_instance_;
class OilDelivery_Output_DeliveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Output_Delivery>
      _instance;
} _OilDelivery_Output_Delivery_default_instance_;
class OilDelivery_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Output>
      _instance;
} _OilDelivery_Output_default_instance_;
class OilDelivery_GasStation_DemandValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_GasStation_DemandValue>
      _instance;
} _OilDelivery_GasStation_DemandValue_default_instance_;
class OilDelivery_GasStationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_GasStation>
      _instance;
} _OilDelivery_GasStation_default_instance_;
class OilDelivery_VehicleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Vehicle>
      _instance;
} _OilDelivery_Vehicle_default_instance_;
class OilDelivery_CabinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Cabin>
      _instance;
} _OilDelivery_Cabin_default_instance_;
class OilDelivery_SubmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery_Submission>
      _instance;
} _OilDelivery_Submission_default_instance_;
class OilDeliveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OilDelivery>
      _instance;
} _OilDelivery_default_instance_;
}  // namespace pb
namespace protobuf_OilDelivery_2eproto {
static void InitDefaultsOilDelivery_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Input_default_instance_;
    new (ptr) ::pb::OilDelivery_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OilDelivery_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOilDelivery_Input}, {
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation.base,
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Vehicle.base,}};

static void InitDefaultsOilDelivery_Output_Delivery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Output_Delivery_default_instance_;
    new (ptr) ::pb::OilDelivery_Output_Delivery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Output_Delivery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_Output_Delivery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOilDelivery_Output_Delivery}, {
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Vehicle.base,}};

static void InitDefaultsOilDelivery_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Output_default_instance_;
    new (ptr) ::pb::OilDelivery_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOilDelivery_Output}, {
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Output_Delivery.base,}};

static void InitDefaultsOilDelivery_GasStation_DemandValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_GasStation_DemandValue_default_instance_;
    new (ptr) ::pb::OilDelivery_GasStation_DemandValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_GasStation_DemandValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery_GasStation_DemandValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOilDelivery_GasStation_DemandValue}, {}};

static void InitDefaultsOilDelivery_GasStation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_GasStation_default_instance_;
    new (ptr) ::pb::OilDelivery_GasStation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_GasStation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_GasStation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOilDelivery_GasStation}, {
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation_DemandValue.base,}};

static void InitDefaultsOilDelivery_Vehicle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Vehicle_default_instance_;
    new (ptr) ::pb::OilDelivery_Vehicle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Vehicle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OilDelivery_Vehicle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOilDelivery_Vehicle}, {
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Cabin.base,}};

static void InitDefaultsOilDelivery_Cabin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Cabin_default_instance_;
    new (ptr) ::pb::OilDelivery_Cabin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Cabin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery_Cabin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOilDelivery_Cabin}, {}};

static void InitDefaultsOilDelivery_Submission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_Submission_default_instance_;
    new (ptr) ::pb::OilDelivery_Submission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery_Submission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery_Submission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOilDelivery_Submission}, {}};

static void InitDefaultsOilDelivery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OilDelivery_default_instance_;
    new (ptr) ::pb::OilDelivery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OilDelivery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OilDelivery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOilDelivery}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Output_Delivery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_GasStation_DemandValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_GasStation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Vehicle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Cabin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery_Submission.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OilDelivery.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Input, gasstations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Input, vehicles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Output_Delivery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Output_Delivery, vehicles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Output, deliveries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation_DemandValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation_DemandValue, demand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation_DemandValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_GasStation, demandvalues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Vehicle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Vehicle, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Vehicle, cabins_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, vehicleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Cabin, stationid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, ram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, compiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery_Submission, date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OilDelivery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::OilDelivery_Input)},
  { 7, -1, sizeof(::pb::OilDelivery_Output_Delivery)},
  { 13, -1, sizeof(::pb::OilDelivery_Output)},
  { 19, -1, sizeof(::pb::OilDelivery_GasStation_DemandValue)},
  { 26, -1, sizeof(::pb::OilDelivery_GasStation)},
  { 33, -1, sizeof(::pb::OilDelivery_Vehicle)},
  { 41, -1, sizeof(::pb::OilDelivery_Cabin)},
  { 51, -1, sizeof(::pb::OilDelivery_Submission)},
  { 70, -1, sizeof(::pb::OilDelivery)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Output_Delivery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_GasStation_DemandValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_GasStation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Vehicle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Cabin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_Submission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OilDelivery_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "OilDelivery.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021OilDelivery.proto\022\002pb\"\377\005\n\013OilDelivery\032"
      "c\n\005Input\022/\n\013gasStations\030\001 \003(\0132\032.pb.OilDe"
      "livery.GasStation\022)\n\010vehicles\030\002 \003(\0132\027.pb"
      ".OilDelivery.Vehicle\032t\n\006Output\0223\n\ndelive"
      "ries\030\001 \003(\0132\037.pb.OilDelivery.Output.Deliv"
      "ery\0325\n\010Delivery\022)\n\010vehicles\030\001 \003(\0132\027.pb.O"
      "ilDelivery.Vehicle\032\204\001\n\nGasStation\022\n\n\002id\030"
      "\001 \001(\005\022<\n\014demandValues\030\002 \003(\0132&.pb.OilDeli"
      "very.GasStation.DemandValue\032,\n\013DemandVal"
      "ue\022\016\n\006demand\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\032J\n\007Veh"
      "icle\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022%\n\006cabins"
      "\030\003 \003(\0132\025.pb.OilDelivery.Cabin\032W\n\005Cabin\022\n"
      "\n\002id\030\001 \001(\005\022\021\n\tvehicleId\030\002 \001(\005\022\016\n\006volume\030"
      "\003 \001(\005\022\014\n\004load\030\004 \001(\005\022\021\n\tstationId\030\005 \001(\005\032\350"
      "\001\n\nSubmission\022\016\n\006author\030\001 \001(\t\022\021\n\talgorit"
      "hm\030\002 \001(\t\022\016\n\006thread\030\003 \001(\t\022\013\n\003cpu\030\004 \001(\t\022\013\n"
      "\003ram\030\005 \001(\t\022\020\n\010language\030\006 \001(\t\022\020\n\010compiler"
      "\030\007 \001(\t\022\n\n\002os\030\010 \001(\t\022\017\n\007problem\030\025 \001(\t\022\020\n\010i"
      "nstance\030\026 \001(\t\022\020\n\010duration\030\027 \001(\t\022\013\n\003obj\030\037"
      " \001(\001\022\r\n\005email\030  \001(\t\022\014\n\004date\030! \001(\tb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 801);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OilDelivery.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OilDelivery_2eproto
namespace pb {

// ===================================================================

void OilDelivery_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Input::kGasStationsFieldNumber;
const int OilDelivery_Input::kVehiclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Input::OilDelivery_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Input)
}
OilDelivery_Input::OilDelivery_Input(const OilDelivery_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gasstations_(from.gasstations_),
      vehicles_(from.vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Input)
}

void OilDelivery_Input::SharedCtor() {
}

OilDelivery_Input::~OilDelivery_Input() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Input)
  SharedDtor();
}

void OilDelivery_Input::SharedDtor() {
}

void OilDelivery_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Input::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Input& OilDelivery_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Input.base);
  return *internal_default_instance();
}


void OilDelivery_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gasstations_.Clear();
  vehicles_.Clear();
  _internal_metadata_.Clear();
}

bool OilDelivery_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.OilDelivery.GasStation gasStations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gasstations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.OilDelivery.Vehicle vehicles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Input)
  return false;
#undef DO_
}

void OilDelivery_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.GasStation gasStations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gasstations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->gasstations(static_cast<int>(i)),
      output);
  }

  // repeated .pb.OilDelivery.Vehicle vehicles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->vehicles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Input)
}

::google::protobuf::uint8* OilDelivery_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.GasStation gasStations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gasstations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->gasstations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.OilDelivery.Vehicle vehicles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vehicles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Input)
  return target;
}

size_t OilDelivery_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OilDelivery.GasStation gasStations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gasstations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gasstations(static_cast<int>(i)));
    }
  }

  // repeated .pb.OilDelivery.Vehicle vehicles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Input)
    MergeFrom(*source);
  }
}

void OilDelivery_Input::MergeFrom(const OilDelivery_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gasstations_.MergeFrom(from.gasstations_);
  vehicles_.MergeFrom(from.vehicles_);
}

void OilDelivery_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Input::CopyFrom(const OilDelivery_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Input::IsInitialized() const {
  return true;
}

void OilDelivery_Input::Swap(OilDelivery_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Input::InternalSwap(OilDelivery_Input* other) {
  using std::swap;
  CastToBase(&gasstations_)->InternalSwap(CastToBase(&other->gasstations_));
  CastToBase(&vehicles_)->InternalSwap(CastToBase(&other->vehicles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Input::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_Output_Delivery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Output_Delivery::kVehiclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Output_Delivery::OilDelivery_Output_Delivery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Output_Delivery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Output.Delivery)
}
OilDelivery_Output_Delivery::OilDelivery_Output_Delivery(const OilDelivery_Output_Delivery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vehicles_(from.vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Output.Delivery)
}

void OilDelivery_Output_Delivery::SharedCtor() {
}

OilDelivery_Output_Delivery::~OilDelivery_Output_Delivery() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Output.Delivery)
  SharedDtor();
}

void OilDelivery_Output_Delivery::SharedDtor() {
}

void OilDelivery_Output_Delivery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Output_Delivery::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Output_Delivery& OilDelivery_Output_Delivery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Output_Delivery.base);
  return *internal_default_instance();
}


void OilDelivery_Output_Delivery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Output.Delivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vehicles_.Clear();
  _internal_metadata_.Clear();
}

bool OilDelivery_Output_Delivery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Output.Delivery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.OilDelivery.Vehicle vehicles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Output.Delivery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Output.Delivery)
  return false;
#undef DO_
}

void OilDelivery_Output_Delivery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Output.Delivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.Vehicle vehicles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vehicles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Output.Delivery)
}

::google::protobuf::uint8* OilDelivery_Output_Delivery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Output.Delivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.Vehicle vehicles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vehicles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Output.Delivery)
  return target;
}

size_t OilDelivery_Output_Delivery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Output.Delivery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OilDelivery.Vehicle vehicles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Output_Delivery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Output.Delivery)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Output_Delivery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Output_Delivery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Output.Delivery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Output.Delivery)
    MergeFrom(*source);
  }
}

void OilDelivery_Output_Delivery::MergeFrom(const OilDelivery_Output_Delivery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Output.Delivery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vehicles_.MergeFrom(from.vehicles_);
}

void OilDelivery_Output_Delivery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Output.Delivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Output_Delivery::CopyFrom(const OilDelivery_Output_Delivery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Output.Delivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Output_Delivery::IsInitialized() const {
  return true;
}

void OilDelivery_Output_Delivery::Swap(OilDelivery_Output_Delivery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Output_Delivery::InternalSwap(OilDelivery_Output_Delivery* other) {
  using std::swap;
  CastToBase(&vehicles_)->InternalSwap(CastToBase(&other->vehicles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Output_Delivery::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Output::kDeliveriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Output::OilDelivery_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Output)
}
OilDelivery_Output::OilDelivery_Output(const OilDelivery_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deliveries_(from.deliveries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Output)
}

void OilDelivery_Output::SharedCtor() {
}

OilDelivery_Output::~OilDelivery_Output() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Output)
  SharedDtor();
}

void OilDelivery_Output::SharedDtor() {
}

void OilDelivery_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Output::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Output& OilDelivery_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Output.base);
  return *internal_default_instance();
}


void OilDelivery_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deliveries_.Clear();
  _internal_metadata_.Clear();
}

bool OilDelivery_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.OilDelivery.Output.Delivery deliveries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deliveries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Output)
  return false;
#undef DO_
}

void OilDelivery_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.Output.Delivery deliveries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliveries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->deliveries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Output)
}

::google::protobuf::uint8* OilDelivery_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.OilDelivery.Output.Delivery deliveries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliveries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->deliveries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Output)
  return target;
}

size_t OilDelivery_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OilDelivery.Output.Delivery deliveries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->deliveries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deliveries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Output)
    MergeFrom(*source);
  }
}

void OilDelivery_Output::MergeFrom(const OilDelivery_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deliveries_.MergeFrom(from.deliveries_);
}

void OilDelivery_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Output::CopyFrom(const OilDelivery_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Output::IsInitialized() const {
  return true;
}

void OilDelivery_Output::Swap(OilDelivery_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Output::InternalSwap(OilDelivery_Output* other) {
  using std::swap;
  CastToBase(&deliveries_)->InternalSwap(CastToBase(&other->deliveries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Output::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_GasStation_DemandValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_GasStation_DemandValue::kDemandFieldNumber;
const int OilDelivery_GasStation_DemandValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_GasStation_DemandValue::OilDelivery_GasStation_DemandValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation_DemandValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.GasStation.DemandValue)
}
OilDelivery_GasStation_DemandValue::OilDelivery_GasStation_DemandValue(const OilDelivery_GasStation_DemandValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&demand_, &from.demand_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&demand_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.GasStation.DemandValue)
}

void OilDelivery_GasStation_DemandValue::SharedCtor() {
  ::memset(&demand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&demand_)) + sizeof(value_));
}

OilDelivery_GasStation_DemandValue::~OilDelivery_GasStation_DemandValue() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.GasStation.DemandValue)
  SharedDtor();
}

void OilDelivery_GasStation_DemandValue::SharedDtor() {
}

void OilDelivery_GasStation_DemandValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_GasStation_DemandValue::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_GasStation_DemandValue& OilDelivery_GasStation_DemandValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation_DemandValue.base);
  return *internal_default_instance();
}


void OilDelivery_GasStation_DemandValue::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.GasStation.DemandValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&demand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&demand_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool OilDelivery_GasStation_DemandValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.GasStation.DemandValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 demand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &demand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.GasStation.DemandValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.GasStation.DemandValue)
  return false;
#undef DO_
}

void OilDelivery_GasStation_DemandValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.GasStation.DemandValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 demand = 1;
  if (this->demand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->demand(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.GasStation.DemandValue)
}

::google::protobuf::uint8* OilDelivery_GasStation_DemandValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.GasStation.DemandValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 demand = 1;
  if (this->demand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->demand(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.GasStation.DemandValue)
  return target;
}

size_t OilDelivery_GasStation_DemandValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.GasStation.DemandValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 demand = 1;
  if (this->demand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->demand());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_GasStation_DemandValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.GasStation.DemandValue)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_GasStation_DemandValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_GasStation_DemandValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.GasStation.DemandValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.GasStation.DemandValue)
    MergeFrom(*source);
  }
}

void OilDelivery_GasStation_DemandValue::MergeFrom(const OilDelivery_GasStation_DemandValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.GasStation.DemandValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.demand() != 0) {
    set_demand(from.demand());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void OilDelivery_GasStation_DemandValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.GasStation.DemandValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_GasStation_DemandValue::CopyFrom(const OilDelivery_GasStation_DemandValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.GasStation.DemandValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_GasStation_DemandValue::IsInitialized() const {
  return true;
}

void OilDelivery_GasStation_DemandValue::Swap(OilDelivery_GasStation_DemandValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_GasStation_DemandValue::InternalSwap(OilDelivery_GasStation_DemandValue* other) {
  using std::swap;
  swap(demand_, other->demand_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_GasStation_DemandValue::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_GasStation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_GasStation::kIdFieldNumber;
const int OilDelivery_GasStation::kDemandValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_GasStation::OilDelivery_GasStation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.GasStation)
}
OilDelivery_GasStation::OilDelivery_GasStation(const OilDelivery_GasStation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      demandvalues_(from.demandvalues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.GasStation)
}

void OilDelivery_GasStation::SharedCtor() {
  id_ = 0;
}

OilDelivery_GasStation::~OilDelivery_GasStation() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.GasStation)
  SharedDtor();
}

void OilDelivery_GasStation::SharedDtor() {
}

void OilDelivery_GasStation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_GasStation::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_GasStation& OilDelivery_GasStation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_GasStation.base);
  return *internal_default_instance();
}


void OilDelivery_GasStation::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.GasStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  demandvalues_.Clear();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool OilDelivery_GasStation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.GasStation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.OilDelivery.GasStation.DemandValue demandValues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_demandvalues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.GasStation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.GasStation)
  return false;
#undef DO_
}

void OilDelivery_GasStation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.GasStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .pb.OilDelivery.GasStation.DemandValue demandValues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->demandvalues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->demandvalues(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.GasStation)
}

::google::protobuf::uint8* OilDelivery_GasStation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.GasStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .pb.OilDelivery.GasStation.DemandValue demandValues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->demandvalues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->demandvalues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.GasStation)
  return target;
}

size_t OilDelivery_GasStation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.GasStation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OilDelivery.GasStation.DemandValue demandValues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->demandvalues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->demandvalues(static_cast<int>(i)));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_GasStation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.GasStation)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_GasStation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_GasStation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.GasStation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.GasStation)
    MergeFrom(*source);
  }
}

void OilDelivery_GasStation::MergeFrom(const OilDelivery_GasStation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.GasStation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  demandvalues_.MergeFrom(from.demandvalues_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void OilDelivery_GasStation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.GasStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_GasStation::CopyFrom(const OilDelivery_GasStation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.GasStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_GasStation::IsInitialized() const {
  return true;
}

void OilDelivery_GasStation::Swap(OilDelivery_GasStation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_GasStation::InternalSwap(OilDelivery_GasStation* other) {
  using std::swap;
  CastToBase(&demandvalues_)->InternalSwap(CastToBase(&other->demandvalues_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_GasStation::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_Vehicle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Vehicle::kIdFieldNumber;
const int OilDelivery_Vehicle::kNameFieldNumber;
const int OilDelivery_Vehicle::kCabinsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Vehicle::OilDelivery_Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Vehicle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Vehicle)
}
OilDelivery_Vehicle::OilDelivery_Vehicle(const OilDelivery_Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cabins_(from.cabins_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Vehicle)
}

void OilDelivery_Vehicle::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

OilDelivery_Vehicle::~OilDelivery_Vehicle() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Vehicle)
  SharedDtor();
}

void OilDelivery_Vehicle::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OilDelivery_Vehicle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Vehicle::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Vehicle& OilDelivery_Vehicle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Vehicle.base);
  return *internal_default_instance();
}


void OilDelivery_Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cabins_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool OilDelivery_Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Vehicle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Vehicle.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.OilDelivery.Cabin cabins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cabins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Vehicle)
  return false;
#undef DO_
}

void OilDelivery_Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Vehicle.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .pb.OilDelivery.Cabin cabins = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cabins_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->cabins(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Vehicle)
}

::google::protobuf::uint8* OilDelivery_Vehicle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Vehicle.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .pb.OilDelivery.Cabin cabins = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cabins_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cabins(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Vehicle)
  return target;
}

size_t OilDelivery_Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Vehicle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OilDelivery.Cabin cabins = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cabins_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cabins(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Vehicle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Vehicle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Vehicle)
    MergeFrom(*source);
  }
}

void OilDelivery_Vehicle::MergeFrom(const OilDelivery_Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cabins_.MergeFrom(from.cabins_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void OilDelivery_Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Vehicle::CopyFrom(const OilDelivery_Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Vehicle::IsInitialized() const {
  return true;
}

void OilDelivery_Vehicle::Swap(OilDelivery_Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Vehicle::InternalSwap(OilDelivery_Vehicle* other) {
  using std::swap;
  CastToBase(&cabins_)->InternalSwap(CastToBase(&other->cabins_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Vehicle::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_Cabin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Cabin::kIdFieldNumber;
const int OilDelivery_Cabin::kVehicleIdFieldNumber;
const int OilDelivery_Cabin::kVolumeFieldNumber;
const int OilDelivery_Cabin::kLoadFieldNumber;
const int OilDelivery_Cabin::kStationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Cabin::OilDelivery_Cabin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Cabin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Cabin)
}
OilDelivery_Cabin::OilDelivery_Cabin(const OilDelivery_Cabin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stationid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(stationid_));
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Cabin)
}

void OilDelivery_Cabin::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stationid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(stationid_));
}

OilDelivery_Cabin::~OilDelivery_Cabin() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Cabin)
  SharedDtor();
}

void OilDelivery_Cabin::SharedDtor() {
}

void OilDelivery_Cabin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Cabin::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Cabin& OilDelivery_Cabin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Cabin.base);
  return *internal_default_instance();
}


void OilDelivery_Cabin::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Cabin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stationid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(stationid_));
  _internal_metadata_.Clear();
}

bool OilDelivery_Cabin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Cabin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vehicleId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehicleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 load = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stationId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Cabin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Cabin)
  return false;
#undef DO_
}

void OilDelivery_Cabin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Cabin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 vehicleId = 2;
  if (this->vehicleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vehicleid(), output);
  }

  // int32 volume = 3;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->volume(), output);
  }

  // int32 load = 4;
  if (this->load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->load(), output);
  }

  // int32 stationId = 5;
  if (this->stationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->stationid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Cabin)
}

::google::protobuf::uint8* OilDelivery_Cabin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Cabin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 vehicleId = 2;
  if (this->vehicleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vehicleid(), target);
  }

  // int32 volume = 3;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->volume(), target);
  }

  // int32 load = 4;
  if (this->load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->load(), target);
  }

  // int32 stationId = 5;
  if (this->stationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->stationid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Cabin)
  return target;
}

size_t OilDelivery_Cabin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Cabin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 vehicleId = 2;
  if (this->vehicleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vehicleid());
  }

  // int32 volume = 3;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // int32 load = 4;
  if (this->load() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->load());
  }

  // int32 stationId = 5;
  if (this->stationid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stationid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Cabin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Cabin)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Cabin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Cabin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Cabin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Cabin)
    MergeFrom(*source);
  }
}

void OilDelivery_Cabin::MergeFrom(const OilDelivery_Cabin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Cabin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.vehicleid() != 0) {
    set_vehicleid(from.vehicleid());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.load() != 0) {
    set_load(from.load());
  }
  if (from.stationid() != 0) {
    set_stationid(from.stationid());
  }
}

void OilDelivery_Cabin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Cabin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Cabin::CopyFrom(const OilDelivery_Cabin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Cabin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Cabin::IsInitialized() const {
  return true;
}

void OilDelivery_Cabin::Swap(OilDelivery_Cabin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Cabin::InternalSwap(OilDelivery_Cabin* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(vehicleid_, other->vehicleid_);
  swap(volume_, other->volume_);
  swap(load_, other->load_);
  swap(stationid_, other->stationid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Cabin::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery_Submission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OilDelivery_Submission::kAuthorFieldNumber;
const int OilDelivery_Submission::kAlgorithmFieldNumber;
const int OilDelivery_Submission::kThreadFieldNumber;
const int OilDelivery_Submission::kCpuFieldNumber;
const int OilDelivery_Submission::kRamFieldNumber;
const int OilDelivery_Submission::kLanguageFieldNumber;
const int OilDelivery_Submission::kCompilerFieldNumber;
const int OilDelivery_Submission::kOsFieldNumber;
const int OilDelivery_Submission::kProblemFieldNumber;
const int OilDelivery_Submission::kInstanceFieldNumber;
const int OilDelivery_Submission::kDurationFieldNumber;
const int OilDelivery_Submission::kObjFieldNumber;
const int OilDelivery_Submission::kEmailFieldNumber;
const int OilDelivery_Submission::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery_Submission::OilDelivery_Submission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Submission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery.Submission)
}
OilDelivery_Submission::OilDelivery_Submission(const OilDelivery_Submission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithm().size() > 0) {
    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thread().size() > 0) {
    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram().size() > 0) {
    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compiler().size() > 0) {
    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.os().size() > 0) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.problem().size() > 0) {
    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance().size() > 0) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  obj_ = from.obj_;
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery.Submission)
}

void OilDelivery_Submission::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
}

OilDelivery_Submission::~OilDelivery_Submission() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery.Submission)
  SharedDtor();
}

void OilDelivery_Submission::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OilDelivery_Submission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery_Submission::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery_Submission& OilDelivery_Submission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery_Submission.base);
  return *internal_default_instance();
}


void OilDelivery_Submission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
  _internal_metadata_.Clear();
}

bool OilDelivery_Submission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery.Submission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm().data(), static_cast<int>(this->algorithm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.algorithm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thread()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thread().data(), static_cast<int>(this->thread().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.thread"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram().data(), static_cast<int>(this->ram().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.ram"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compiler = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiler()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compiler().data(), static_cast<int>(this->compiler().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.compiler"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string os = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string problem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_problem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->problem().data(), static_cast<int>(this->problem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.problem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.instance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OilDelivery.Submission.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery.Submission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery.Submission)
  return false;
#undef DO_
}

void OilDelivery_Submission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->algorithm(), output);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.thread");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thread(), output);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpu(), output);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.ram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ram(), output);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->language(), output);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.compiler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->compiler(), output);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->os(), output);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->problem(), output);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->instance(), output);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->duration(), output);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->obj(), output);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->email(), output);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery.Submission)
}

::google::protobuf::uint8* OilDelivery_Submission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->algorithm(), target);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.thread");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thread(), target);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cpu(), target);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.ram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ram(), target);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->language(), target);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.compiler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->compiler(), target);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->os(), target);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->problem(), target);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->instance(), target);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->duration(), target);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->obj(), target);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->email(), target);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OilDelivery.Submission.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery.Submission)
  return target;
}

size_t OilDelivery_Submission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery.Submission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm());
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thread());
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram());
  }

  // string language = 6;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());
  }

  // string os = 8;
  if (this->os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->os());
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->problem());
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance());
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  // string email = 32;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string date = 33;
  if (this->date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // double obj = 31;
  if (this->obj() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery_Submission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery_Submission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery_Submission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery.Submission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery.Submission)
    MergeFrom(*source);
  }
}

void OilDelivery_Submission::MergeFrom(const OilDelivery_Submission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.algorithm().size() > 0) {

    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  if (from.thread().size() > 0) {

    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.ram().size() > 0) {

    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.compiler().size() > 0) {

    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  if (from.os().size() > 0) {

    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  if (from.problem().size() > 0) {

    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.obj() != 0) {
    set_obj(from.obj());
  }
}

void OilDelivery_Submission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery_Submission::CopyFrom(const OilDelivery_Submission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery_Submission::IsInitialized() const {
  return true;
}

void OilDelivery_Submission::Swap(OilDelivery_Submission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery_Submission::InternalSwap(OilDelivery_Submission* other) {
  using std::swap;
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  algorithm_.Swap(&other->algorithm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thread_.Swap(&other->thread_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ram_.Swap(&other->ram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  compiler_.Swap(&other->compiler_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  problem_.Swap(&other->problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_, other->obj_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery_Submission::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OilDelivery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OilDelivery::OilDelivery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OilDelivery_2eproto::scc_info_OilDelivery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OilDelivery)
}
OilDelivery::OilDelivery(const OilDelivery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.OilDelivery)
}

void OilDelivery::SharedCtor() {
}

OilDelivery::~OilDelivery() {
  // @@protoc_insertion_point(destructor:pb.OilDelivery)
  SharedDtor();
}

void OilDelivery::SharedDtor() {
}

void OilDelivery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OilDelivery::descriptor() {
  ::protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OilDelivery& OilDelivery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OilDelivery_2eproto::scc_info_OilDelivery.base);
  return *internal_default_instance();
}


void OilDelivery::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OilDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OilDelivery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OilDelivery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OilDelivery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OilDelivery)
  return false;
#undef DO_
}

void OilDelivery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OilDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OilDelivery)
}

::google::protobuf::uint8* OilDelivery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OilDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OilDelivery)
  return target;
}

size_t OilDelivery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OilDelivery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OilDelivery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OilDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  const OilDelivery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OilDelivery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OilDelivery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OilDelivery)
    MergeFrom(*source);
  }
}

void OilDelivery::MergeFrom(const OilDelivery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OilDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OilDelivery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OilDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OilDelivery::CopyFrom(const OilDelivery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OilDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OilDelivery::IsInitialized() const {
  return true;
}

void OilDelivery::Swap(OilDelivery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OilDelivery::InternalSwap(OilDelivery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OilDelivery::GetMetadata() const {
  protobuf_OilDelivery_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OilDelivery_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Input* Arena::CreateMaybeMessage< ::pb::OilDelivery_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Output_Delivery* Arena::CreateMaybeMessage< ::pb::OilDelivery_Output_Delivery >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Output_Delivery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Output* Arena::CreateMaybeMessage< ::pb::OilDelivery_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_GasStation_DemandValue* Arena::CreateMaybeMessage< ::pb::OilDelivery_GasStation_DemandValue >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_GasStation_DemandValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_GasStation* Arena::CreateMaybeMessage< ::pb::OilDelivery_GasStation >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_GasStation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Vehicle* Arena::CreateMaybeMessage< ::pb::OilDelivery_Vehicle >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Vehicle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Cabin* Arena::CreateMaybeMessage< ::pb::OilDelivery_Cabin >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Cabin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery_Submission* Arena::CreateMaybeMessage< ::pb::OilDelivery_Submission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery_Submission >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OilDelivery* Arena::CreateMaybeMessage< ::pb::OilDelivery >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OilDelivery >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
