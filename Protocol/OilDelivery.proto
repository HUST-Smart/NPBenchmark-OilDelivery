// # 概述
// 使用 Google 的 Protocol Buffer (简称 protobuf) 定义.
// 石油配送问题原始输入输出数据格式.
// OilDelivery 定义了算法所需的全部数据.
// OilDelivery.Input 定义了算法所需的全部输入数据.
// OilDelivery.Output 定义了算法所需的全部输出数据, 应输出至提交文件的第二行以后.
// Submission 定义了向测评系统提交的计算结果文件的信息摘要, 应输出至提交文件的第一行.

syntax = "proto3";

package pb;

// option java_package = "pb";
// option java_outer_classname = "OilDeliveries";
// option cc_enable_arenas = true;


// 主要数据
// 求解算法输入输出数据接口
message OilDelivery {
    // 求解石油配送问题所需的输入数据
    message Input {
        repeated GasStation gasStations = 1; 	// 加油站列表
        repeated Vehicle vehicles = 2; 		    // 车辆列表
    }
    // 求解结果输出数据
    message Output {
        repeated Delivery deliveries = 1; 	    // deliveries[p]表示p阶段的配送方案
        message Delivery {
            repeated Vehicle vehicles=1;        // vehicles[v]表示车辆v的配送方案
        }
    }

    message GasStation {
        int32 id = 1;
        repeated DemandValue demandValues = 2;
        message DemandValue {
            int32 demand = 1;
            int32 value = 2;
        }
    }

    message Vehicle {
        int32 id=1;
        string name =2;
        repeated Cabin cabins=3;
    }

    message Cabin {
        int32 id = 1;
        int32 vehicleId = 2;	//所属车辆ID
        int32 volume = 3;	    //容量
        int32 load=4;
        int32 stationId=5;      //给ID为stationId的站点配送量为load的石油
    }
    
    // 测评系统提交信息摘要
    message Submission {
    // 应在 SDK 内由提交者手工填写的数据项.
    string author = 1; // 提交者姓名.
    string algorithm = 2; // 算法名称.
    string thread = 3; // 算法线程数
    string cpu = 4; // 处理器型号与主频.
    string ram = 5; // 内存容量与频率. (Windows 下可以使用 wmic memorychip 命令查看)
    string language = 6; // 编程语言.
    string compiler = 7; // 编译器.
    string os = 8; // 操作系统

    // 由 SDK 自动记录的数据项.
    string problem = 21; // 问题名称.
    string instance = 22; // 算例名称.
    string duration = 23; // 求解耗时.

    // 由服务器自动计算的数据项.
    double obj = 31; // 计算结果目标函数值.
    string email = 32; // 提交者邮箱.
    string date = 33; // 提交时间.
    }
}